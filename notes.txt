Notes
What is a component?
- export everything from the component
Why is a container with in a component with it's own index and styles?

Why React?
- Developers work with a virtual browser that is more friendly than the real browser

- React also handles if the user does this show this interface followup
- React Native is a framework while React is a javaScript library you can use for websites 
- React-Native doesn't render html they map to actual iOS and Andriod UI components

Notes from Week 2 Session
- The React Native components build out in native code
- However the business logic is ran in javaScript
- The developer that used the BackgroundImage component used the resize prop and gave it a value (they knew how to use it) because they read the documentation
 - [Image Background Documentation](https://facebook.github.io/react-native/docs/imagebackground)

What is a component?
- export everything from the component
Why is a container with in a component with it's own index and styles?

Why React?
- Developers work with a virtual browser that is more friendly than the real browser

- React also handles if the user does this show this interface followup
- React Native is a framework while React is a javaScript library you can use for websites 
- React-Native doesn't render html they map to actual iOS and Andriod UI components

Notes from Week 2 Session
- The React Native components build out in native code
- However the business logic is ran in javaScript
- The developer that used the BackgroundImage component used the resize prop and gave it a value (they knew how to use it) because they read the documentation
 - [Image Background Documentation](https://facebook.github.io/react-native/docs/imagebackground)

Week 4 Questions
We would create the component in curlly braces only then we changed it so that extends Component with a render func and return. Why did we do that?
What does this line of code mean `{ selected ? <Text>Selected</Text> : null}` in './components/List/ListItem'? What does it do?
  - Break it down
How does the visible and not visible checkmark work?


Design Decison Summary - End of ListItem Tutorial
- We build up complex components then break them up into different components just so they can really focus on thing and doing that really well. Then we composed those multiple components into one to actually function the way we want and we can did that all via props being passed in down through a part component.

Notes from Week 4 Session:
```
// A function is an object in JavaScript
// function MyFunc() { console.log('Hello World')}
// MyFunc.someValue = 99
// MyFunc() // Hello World
// console.log(MyFunc.someValue) // 99

// const obj = {}
// obj.a = 88

// function Person() {
//   this.age = 77
//   this.shoeSize = 9
// }

// Person.sayHello = function() {
//   console.log(this.age, this.shoeSize)
// }

// const joe = new Person()
// joe.sayHello()

// class MyClass {
//   constructor() {
//     this.count = 0
//   }

//   whatsTheCount() {
//     console.log(this.count)
//   }
// }

// const t = new MyClass()
// t.whatsTheCount()
```

Really helpful article to understanding how React Native is used for a transportation software: https://blog.expo.io/react-native-and-expo-at-flexport-2ac7841b2268?gi=1b0526ce7ff9

Redux
separation of concerns
- manage state
- distribute data
- store different data
components
- render the data
screens
- actions not happening when scheduled

*************** Data Design*****************
In Redux data is always stored in objects
{
  currencies: {
    baseCurrency: <String>,
    quoteCurrency: <String>,
    amount: <Number>,
    conversions: {
      [CURRENCY_STRING]: {
        isFetching: <Boolean>
        data: <String>, // from api
        rates: { // from api
          [CURRENCY_STRING]: <Number>
        }
      }
    }
  },
  themes: {
    primaryColor: <String>,
  },
}

Reducers are purely functions - actual logic of what we want to do to some data

Set up a store
- Our store brings everything together
- access state
- KEY IDEA: only one store 
  - can organize reducer logic instead create many stores
Info Source: https://redux.js.org/basics/store

Reading Currency Data from Store
- driving all of our user interface based on our Redux state


What are Actions:
- what you want to watch for
- what functions you want to create
- what information you want to pass through

While reducers are how you want to accomplisht the task change what the user sees or what information the database has based off state